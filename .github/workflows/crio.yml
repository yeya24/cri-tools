name: critest CRI-O
on: [push, pull_request]

jobs:
  #
  # Run CRI tests against CRI-O
  #
  linux-build-and-critest-cri-o:
    strategy:
      matrix:
        version: [master, v1.20.0]
    name: ${{matrix.version}} / linux amd64
    runs-on: ubuntu-18.04
    steps:
      - name: Install go
        uses: actions/setup-go@v2
        with:
          go-version: '1.16'

      - name: Setup environment
        shell: bash
        run: |
          echo "GOPATH=${{ github.workspace }}" >> $GITHUB_ENV
          echo "${{ github.workspace }}/bin" >> $GITHUB_PATH

      - name: Cache go modules and build cache
        uses: actions/cache@v2
        with:
          path: |
            ~/go/pkg/mod
            ~/.cache/go-build
            '%LocalAppData%\go-build' # Windows
          key: ${{ runner.os }}-go-${{ hashFiles('**/go.sum') }}
          restore-keys: ${{ runner.os }}-go-

      - name: Setup system
        run: |
          # enable necessary kernel modules
          sudo ip6tables --list >/dev/null

          # enable necessary sysctls
          sudo sysctl -w net.ipv4.conf.all.route_localnet=1
          sudo sysctl -w net.bridge.bridge-nf-call-iptables=1
          sudo sysctl -w net.ipv4.ip_forward=1
          sudo iptables -t nat -I POSTROUTING -s 127.0.0.0/8 ! -d 127.0.0.0/8 -j MASQUERADE

      - name: Install ginkgo
        run: |
          go get -u github.com/onsi/ginkgo/ginkgo
          ginkgo version
          sudo cp $(command -v ginkgo) /usr/local/bin

      - name: Setup GCloud
        uses: google-github-actions/setup-gcloud@master

      - name: Install CRI-O latest master
        if: ${{matrix.version == 'master'}}
        run: |
          curl https://raw.githubusercontent.com/cri-o/cri-o/master/scripts/get | sudo bash

      - name: Install CRI-O latest version
        if: ${{matrix.version == 'v1.20.0'}}
        run: |
          DIR=crio-${{matrix.version}}
          TARBALL=$DIR.tar.gz
          RELEASE=gs://k8s-conform-cri-o/artifacts/$TARBALL
          gsutil cp $RELEASE .
          tar xf $TARBALL
          pushd $DIR || exit
          sudo -E PATH=$PATH make install

      - name: Configure and start CRI-O
        run: |
          sudo mkdir -p /etc/crio/crio.conf.d
          printf '[crio.runtime]\nlog_level = "debug"\n' | sudo tee /etc/crio/crio.conf.d/01-log-level.conf
          sudo systemctl daemon-reload
          sudo systemctl start crio

      - name: Checkout cri-tools for this commit
        uses: actions/checkout@v2
        with:
          path: ${{github.workspace}}/src/github.com/kubernetes-sigs/cri-tools

      - name: Build cri-tools
        run: |
          make
          sudo -E PATH=$PATH make install
        working-directory: ${{ github.workspace }}/src/github.com/kubernetes-sigs/cri-tools

      - name: Run critest
        run: |
          sudo -E PATH=$PATH critest \
            --runtime-endpoint=unix:///var/run/crio/crio.sock \
            --ginkgo.flakeAttempts=3 \
            --parallel=$(nproc)
          sudo journalctl -u crio > cri-o.log

      - name: Upload CRI-O logs
        uses: actions/upload-artifact@v1
        with:
          name: cri-o-${{matrix.version}}-${{github.sha}}.log
          path: cri-o.log
